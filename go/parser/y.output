
state 0
	$accept: .list $end 
	list: .    (1)

	.  reduce 1 (src line 38)

	list  goto 1

state 1
	$accept:  list.$end 
	list:  list.stat '\n' 

	$end  accept
	DIGIT  shift 6
	LETTER  shift 4
	.  error

	expr  goto 3
	number  goto 5
	stat  goto 2

state 2
	list:  list stat.'\n' 

	'\n'  shift 7
	.  error


state 3
	stat:  expr.    (3)

	.  reduce 3 (src line 42)


state 4
	stat:  LETTER.'=' expr 

	'='  shift 8
	.  error


state 5
	expr:  number.    (5)
	number:  number.DIGIT 

	DIGIT  shift 9
	.  reduce 5 (src line 52)


state 6
	number:  DIGIT.    (6)

	.  reduce 6 (src line 55)


state 7
	list:  list stat '\n'.    (2)

	.  reduce 2 (src line 39)


state 8
	stat:  LETTER '='.expr 

	DIGIT  shift 6
	.  error

	expr  goto 10
	number  goto 5

state 9
	number:  number DIGIT.    (7)

	.  reduce 7 (src line 64)


state 10
	stat:  LETTER '=' expr.    (4)

	.  reduce 4 (src line 46)


23 terminals, 5 nonterminals
8 grammar rules, 11/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
54 working sets used
memory: parser 6/240000
0 extra closures
6 shift entries, 1 exceptions
5 goto entries
1 entries saved by goto default
Optimizer space used: output 16/240000
16 table entries, 5 zero
maximum spread: 23, maximum offset: 23
